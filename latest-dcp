version: "2.4"

services:
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    restart: unless-stopped
    networks:
      dcp_default:
    ports:
      - 8888:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  
  swag:
    image: ghcr.io/linuxserver/swag
    container_name: swag
    restart: unless-stopped
    networks:
      dcp_default:
        ipv4_address: 172.21.0.200
    env_file:
      - ./.swag.env
    ports:
      - 80:80
      - 443:443
    volumes:
      - ${APPDATA}/swag:/config
      - ${APPDATA}/organizr/www/db:/config/log/fail2ban/organizr
      - ${APPDATA}/bitwarden/logs:/config/log/fail2ban/bitwarden
      - ${APPDATA}/emby/logs:/config/log/fail2ban/emby
    environment:
      - DOCKER_MODS=linuxserver/mods:swag-cloudflare-real-ip|linuxserver/mods:swag-f2bdiscord
      - SUBDOMAINS=wildcard
      - ONLY_SUBDOMAINS=false
      - VALIDATION=dns
      - DNSPLUGIN=cloudflare
      - STAGING=false
      - PUID=${PUID}
      - PGID=${PUID}
  
  tautulli:
    image: hotio/tautulli:release
    container_name: tautulli
    restart: unless-stopped
    networks: 
      dcp_default:
    ports:
      - 8181:8181
    volumes:
      - ${APPDATA}/tautulli:/config
      - "${APPDATA}/plex/app/Plex Media Server/Logs:/logs"
    environment:
      - PUID=${PUID}
      - PGID=${PGID} 
      - UMASK=002
      - DEBUG=no    
      
  organizr:
    image: organizr/organizr
    container_name: organizr
    restart: unless-stopped
    networks: 
      dcp_default:
    ports:
      - 8981:80
    volumes:
      - ${APPDATA}/organizr:/config
    environment:
      - fpm=false
      - PUID=${PUID}
      - PGID=${PGID}
      
  plex:
    image: hotio/plex:release
    container_name: plex
    restart: unless-stopped
    network_mode: host
    volumes:
      - ${APPDATA}/plex:/config
      - /fast_storage/media:/media
      - /fast_storage/4k:/4k
      - /nvme_storage/media_highuse:/media_highuse
      - /tank/photos:/photos
      - "/tank/plexdata/Cache/Transcode:/config/app/Plex Media Server/Cache/Transcode"
      - "/tank/plexdata/Cache/PhotoTranscoder:/config/app/Plex Media Server/Cache/PhotoTranscoder"
      - "/tank/plexdata/Media:/config/app/Plex Media Server/Media"
      - "/tank/plexdata/Metadata:/config/app/Plex Media Server/Metadata"
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,video,utility
      - CUDA_DRIVER_CAPABILITIES=compute,video,utility
      - PUID=${PUID}
      - PGID=${PUID}
      - UMASK=002
      - DEBUG=no
      - PLEX_PASS=yes
    runtime: nvidia

  autoscan:
    image: hotio/autoscan:nightly
    container_name: autoscan
    restart: unless-stopped
    networks: 
      dcp_default:
    env_file:
      - ./.autoscan.env
    ports:
      - 3030:3030
    volumes:
      - ${APPDATA}/autoscan:/config
      - /fast_storage:/storage
    environment:
      - AUTOSCAN_VERBOSITY=0
      - PUID=${PUID}
      - PGID=${PGID}
      - DEBUG=no
      - TZ=${TZ}

  ombi:
    image: hotio/ombi:testing
    container_name: ombi
    restart: unless-stopped
    networks: 
      dcp_default:
    ports:
      - 5000:5000
    volumes:
      - ${APPDATA}/ombi:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID} 
      - UMASK=002
      - DEBUG=no              
  
  bitwarden:
    image: bitwardenrs/server:latest
    container_name: bitwarden
    restart: unless-stopped
    networks: 
      dcp_default:
    env_file:
      - ./.bitwarden.env
    ports:
     - 8343:80
    volumes:
      - ${APPDATA}/bitwarden:/data
    environment:
      - SIGNUPS_ALLOWED=false
      - INVITATIONS_ALLOWED=false
      - WEBSOCKET_ENABLED=true
      - LOG_FILE=/data/logs/bitwarden.log
  
  emby:
    image: emby/embyserver:latest
    container_name: emby
    restart: unless-stopped
    network_mode: host
    volumes:
      - ${APPDATA}/emby:/config
      - /cache/transcode/emby:/transcode
      - /fast_storage/media:/media
      - /fast_storage/4k:/4k
    environment: 
      - UID=2
      - GID=2     
      - GIDLIST=2
  
  airsonic:
    image: linuxserver/airsonic
    container_name: airsonic
    restart: unless-stopped
    networks: 
      dcp_default:
    ports:
      - 4040:4040
    volumes:
      - ${APPDATA}/airsonic:/config
      - ${APPDATA}/airsonic/playlists:/playlists
      - /fast_storage/media/audio/music:/music
      - /fast_storage/media/audio/podcasts:/podcasts
    environment: 
      - PUID=${PUID}
      - PGID=${PGID} 
      - JAVA_OPTS=-Xms256m -Xmx512m      
  
  deluge:
    image: binhex/arch-deluge
    container_name: deluge
    restart: unless-stopped
    networks:
      vlan140:
        ipv4_address: 10.4.140.200  
    ports:
      - 8112:8112
      - 8118:8118
      - 24301:24301
      - 58846:58846/tcp
      - 58946:58946/udp
    volumes:
      - ${APPDATA}/deluge:/config
      - /mnt/torrent01/torrent:/data
    environment:
      - DELUGE_DAEMON_LOG_LEVEL=info
      - DELUGE_WEB_LOG_LEVEL=info
      - DEBUG=false
      - UMASK=000
      - PUID=${PUID}
      - PGID=${PGID}   
  
  jackett:
    image: ghcr.io/hotio/jackett:release
    container_name: jackett
    restart: unless-stopped
    networks:
      vlan140:
        ipv4_address: 10.4.140.201
    ports:
      - 9117:9117
    volumes:
      - ${APPDATA}/jackett:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID} 
      - UMASK=002
      - DEBUG=no    
      
  nzbget:
    image: ghcr.io/hotio/nzbget:release
    container_name: nzbget
    restart: unless-stopped
    networks: 
      dcp_default:
    ports:
      - 6789:6789
    volumes:
      - ${APPDATA}/nzbget:/config
      - /fast_storage:/storage
    environment:
      - PUID=${PUID}
      - PGID=${PGID} 
      - UMASK=002
      - DEBUG=no  
  
#  nzbget4k:
#    image: ghcr.io/hotio/nzbget:stable
#    container_name: nzbget4k
#    ports:
#      - 6790:6789
#    volumes:
#      - ${APPDATA}/nzbget4k:/config
#      - /cache/downloads:/downloads
#    restart: 
#      unless-stopped
#    environment:
#      - PUID=${PUID}
#      - PGID=${PGID} 
#      - UMASK=002
#      - DEBUG=no
      
  nzbhydra2:
    image: ghcr.io/hotio/nzbhydra2:release
    container_name: nzbhydra2
    restart: unless-stopped
    networks: 
      dcp_default:
    ports:
      - 5076:5076
    volumes:
      - ${APPDATA}/nzbhydra2:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID} 
      - UMASK=002
      - DEBUG=no  
  
  sonarr:
    image: ghcr.io/hotio/sonarr:nightly
    container_name: sonarr
    restart: unless-stopped
    networks: 
      dcp_default:
    ports:
      - 8989:8989
    depends_on:
      - deluge
    volumes:
      - ${APPDATA}/sonarr:/config
      - /fast_storage:/storage
      - /nvme_storage:/nvme_storage
      - /mnt/torrent01/torrent:/torrents
    environment:
      - PUID=${PUID}
      - PGID=${PGID} 
      - UMASK=002
      - DEBUG=no

  sonarr4k:
    image: ghcr.io/hotio/sonarr:nightly
    container_name: sonarr4k
    restart: unless-stopped
    networks: 
      dcp_default:
    ports:
      - 8990:8989  
    depends_on:
      - deluge
    volumes:
      - ${APPDATA}/sonarr4k:/config
      - /fast_storage:/storage
      - /mnt/torrent01/torrent:/torrents
    environment:
      - PUID=${PUID}
      - PGID=${PGID} 
      - UMASK=002
      - DEBUG=no
  
  radarr:
    image: ghcr.io/hotio/radarr:release
    container_name: radarr
    restart: unless-stopped
    depends_on:
      - deluge
    networks: 
      dcp_default:
    ports:
      - 7878:7878
    volumes:
      - ${APPDATA}/radarr:/config
      - /fast_storage:/storage
      - /mnt/torrent01/torrent:/torrents
    environment:
      - PUID=${PUID}
      - PGID=${PGID} 
      - UMASK=002
      - DEBUG=no  
  
  radarr4k:
    image: ghcr.io/hotio/radarr:release
    container_name: radarr4k
    restart: unless-stopped
    networks: 
      dcp_default:
    ports:
      - 7879:7878
    depends_on:
      - deluge  
    volumes:
      - ${APPDATA}/radarr4k:/config
      - /fast_storage:/storage
      - /mnt/torrent01/torrent:/torrents
    environment:
      - PUID=${PUID}
      - PGID=${PGID} 
      - UMASK=002
      - DEBUG=no  

  bazarr4k:
    image: ghcr.io/hotio/bazarr:release
    container_name: bazarr4k
    restart: unless-stopped
    networks: 
      dcp_default:
    ports:
      - 6767:6767
    depends_on:
      - deluge  
    volumes:
      - ${APPDATA}/bazarr4k:/config
      - /fast_storage:/storage
    environment:
      - PUID=${PUID}
      - PGID=${PGID} 
      - UMASK=002
      - DEBUG=no  
  
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    networks: 
      dcp_default:
    ports:
      - 8000:8000
      - 9000:9000
    volumes:
      - ${APPDATA}/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
  
  tdarr:
    image: haveagitgat/tdarr
    container_name: tdarr
    restart: unless-stopped
    networks: 
      dcp_default:
    ports:
      - 8265:8265
    volumes:
      - ${APPDATA}/tdarr:/home/Tdarr/Documents/Tdarr
      - ${APPDATA}/tdarr/TdarrDB:/var/lib/mongodb
      - /cache/transcode/tdarr:/cache
      - /cache/media:/cache_media
      - /nvme_storage/media_highuse:/cache_media_highuse
      - /cache/4k:/cache_4k
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    restart: unless-stopped
    networks: 
      dcp_default:
    ports:
      - 8086:8086
      - 8083:8083
    volumes:
      - ${APPDATA}/influxdb:/var/lib/influxdb
  
  telegraf:
    image: telegraf:latest
    container_name: telegraf
    restart: unless-stopped
    network_mode: host
    privileged: true
    command: /bin/sh -c 'apt update && apt install -y ipmitool && apt install -y smartmontools && apt install -y nvme-cli && telegraf'
    volumes:
     - ${APPDATA}/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
     - /var/run/docker.sock:/var/run/docker.sock:ro
     - /:/rootfs:ro
     - /sys:/rootfs/sys:ro
     - /proc:/rootfs/proc:ro
     - /etc:/rootfs/etc:ro
    environment:
      - HOST_MOUNT_PREFIX=/roofs
      - HOST_PROC=/rootfs/proc
      - HOST_SYS=/rootfs/sys
      - HOST_ETC=/rootfs/etc
       
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    networks: 
      dcp_default:
    env_file:
      - ./.grafana.env
    ports:
      - 3000:3000
    volumes:
      - ${APPDATA}/grafana:/var/lib/grafana
    environment:
      - GF_AUTH_PROXY_ENABLED=true
      - GF_AUTH_PROXY_HEADER_NAME=X-WEBAUTH-USER
      - GF_AUTH_PROXY_HEADER_PROPERTY=username
      - GF_AUTH_PROXY_AUTO_SIGN_UP=true
      - GF_AUTH_PROXY_LDAP_SYNC_TTL=60
      
networks:
  vlan140:
    external:
      name: vlan140
      
  dcp_default:
    external:
      name: dcp_default
